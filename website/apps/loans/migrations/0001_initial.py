# -*- coding: utf-8 -*-
# Generated by Django 1.9.8 on 2017-01-11 00:11
from __future__ import unicode_literals

import datetime
import uuid

import django.core.validators
import django.db.models.deletion
import django_postgres_pgpfields.fields
import django_postgres_pgpfields.managers
import model_utils.fields
from django.db import migrations, models

import core.fields
import money.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('storage', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AddressV1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('street', models.CharField(blank=True, max_length=128, null=True)),
                ('city', models.CharField(blank=True, max_length=128, null=True)),
                ('state', models.CharField(blank=True, max_length=64, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=16, null=True)),
                ('country', models.CharField(default='United States of America', max_length=100)),
                ('start_date', models.DateField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(datetime.date(1900, 1, 1)), django.core.validators.MaxValueValidator(datetime.date(2200, 1, 1))])),
                ('end_date', models.DateField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(datetime.date(1900, 1, 1)), django.core.validators.MaxValueValidator(datetime.date(2200, 1, 1))])),
                ('rent_or_own', models.NullBooleanField()),
            ],
            options={
                'ordering': ('created',),
            },
        ),
        migrations.CreateModel(
            name='BorrowerV1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('ssn', django_postgres_pgpfields.fields.TextPGPPublicKeyField(blank=True, null=True)),
                ('dob', models.DateField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(datetime.date(1900, 1, 1)), django.core.validators.MaxValueValidator(datetime.date(2200, 1, 1))])),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('first_name', models.CharField(blank=True, max_length=128, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=128, null=True)),
                ('last_name', models.CharField(blank=True, max_length=128, null=True)),
                ('name_suffix', models.CharField(blank=True, max_length=20, null=True)),
                ('title_name', models.CharField(blank=True, max_length=128, null=True)),
                ('home_phone', models.CharField(blank=True, max_length=64, null=True)),
                ('role', models.CharField(blank=True, max_length=50)),
                ('rent_or_own', models.NullBooleanField()),
                ('has_dependents_ages', models.NullBooleanField()),
                ('dependents_ages', models.CharField(blank=True, max_length=100)),
                ('marital_status', models.CharField(blank=True, max_length=16, null=True)),
                ('citizenship_status', models.CharField(blank=True, max_length=100)),
                ('years_in_school', models.PositiveIntegerField(blank=True, null=True)),
                ('has_been_student_in_last_two_years', models.NullBooleanField()),
                ('_job_status', models.CharField(blank=True, choices=[('employed', 'Full-Time'), ('self_employed', 'Self-Employed'), ('retired', 'Retired'), ('other', 'Other')], max_length=100)),
                ('is_retired', models.NullBooleanField()),
                ('is_self_employed', models.NullBooleanField()),
                ('has_additional_property', models.NullBooleanField()),
                ('is_purchase_first_time_buyer', models.NullBooleanField()),
                ('is_veteran', models.NullBooleanField()),
                ('is_first_va_loan', models.NullBooleanField()),
                ('receives_va_disability', models.NullBooleanField()),
                ('service_branch', models.CharField(blank=True, max_length=100)),
                ('current_service_status', models.CharField(blank=True, max_length=100)),
                ('years_in_service', models.IntegerField(blank=True, null=True)),
                ('has_additional_income_sources', models.NullBooleanField()),
                ('is_mailing_address_same', models.NullBooleanField(default=True)),
                ('referral', models.CharField(blank=True, max_length=100)),
                ('employment_gap_explanation', models.TextField(blank=True, null=True)),
                ('housing_gap_explanation', models.TextField(blank=True, null=True)),
                ('use_escrow_for_insurance', models.NullBooleanField()),
                ('use_escrow_for_property_taxes', models.NullBooleanField()),
                ('is_credit_report_authorized', models.NullBooleanField()),
                ('is_credit_report_authorized_updated', model_utils.fields.MonitorField(default=None, monitor='is_credit_report_authorized', null=True)),
                ('current_property_type', models.CharField(blank=True, max_length=50)),
                ('is_current_property_owner', models.NullBooleanField()),
                ('is_current_property_second_or_rental', models.NullBooleanField()),
                ('is_current_property_plans_to_sell', models.NullBooleanField()),
                ('is_current_property_in_contract', models.NullBooleanField()),
                ('will_current_property_sold_by_close', models.NullBooleanField()),
                ('ordering', models.IntegerField(blank=True, null=True)),
                ('properties_owned_count', models.PositiveIntegerField(null=True)),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django_postgres_pgpfields.managers.PGPEncryptedManager()),
            ],
        ),
        migrations.CreateModel(
            name='CoborrowerV1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('ssn', django_postgres_pgpfields.fields.TextPGPPublicKeyField(blank=True, null=True)),
                ('dob', models.DateField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(datetime.date(1900, 1, 1)), django.core.validators.MaxValueValidator(datetime.date(2200, 1, 1))])),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('first_name', models.CharField(blank=True, max_length=128, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=128, null=True)),
                ('last_name', models.CharField(blank=True, max_length=128, null=True)),
                ('name_suffix', models.CharField(blank=True, max_length=20, null=True)),
                ('title_name', models.CharField(blank=True, max_length=128, null=True)),
                ('home_phone', models.CharField(blank=True, max_length=64, null=True)),
                ('role', models.CharField(blank=True, max_length=50)),
                ('rent_or_own', models.NullBooleanField()),
                ('has_dependents_ages', models.NullBooleanField()),
                ('dependents_ages', models.CharField(blank=True, max_length=100)),
                ('marital_status', models.CharField(blank=True, max_length=16, null=True)),
                ('citizenship_status', models.CharField(blank=True, max_length=100)),
                ('years_in_school', models.PositiveIntegerField(blank=True, null=True)),
                ('has_been_student_in_last_two_years', models.NullBooleanField()),
                ('_job_status', models.CharField(blank=True, choices=[('employed', 'Full-Time'), ('self_employed', 'Self-Employed'), ('retired', 'Retired'), ('other', 'Other')], max_length=100)),
                ('is_retired', models.NullBooleanField()),
                ('is_self_employed', models.NullBooleanField()),
                ('has_additional_property', models.NullBooleanField()),
                ('is_purchase_first_time_buyer', models.NullBooleanField()),
                ('is_veteran', models.NullBooleanField()),
                ('is_first_va_loan', models.NullBooleanField()),
                ('receives_va_disability', models.NullBooleanField()),
                ('service_branch', models.CharField(blank=True, max_length=100)),
                ('current_service_status', models.CharField(blank=True, max_length=100)),
                ('years_in_service', models.IntegerField(blank=True, null=True)),
                ('has_additional_income_sources', models.NullBooleanField()),
                ('is_mailing_address_same', models.NullBooleanField(default=True)),
                ('referral', models.CharField(blank=True, max_length=100)),
                ('employment_gap_explanation', models.TextField(blank=True, null=True)),
                ('housing_gap_explanation', models.TextField(blank=True, null=True)),
                ('use_escrow_for_insurance', models.NullBooleanField()),
                ('use_escrow_for_property_taxes', models.NullBooleanField()),
                ('is_credit_report_authorized', models.NullBooleanField()),
                ('is_credit_report_authorized_updated', model_utils.fields.MonitorField(default=None, monitor='is_credit_report_authorized', null=True)),
                ('living_together_two_years', models.NullBooleanField()),
                ('borrower', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='coborrower', to='loans.BorrowerV1')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django_postgres_pgpfields.managers.PGPEncryptedManager()),
            ],
        ),
        migrations.CreateModel(
            name='ContactV1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(blank=True, max_length=255)),
                ('last_name', models.CharField(blank=True, max_length=255)),
                ('company_name', models.CharField(blank=True, max_length=255)),
                ('email', models.CharField(blank=True, max_length=255)),
                ('phone', models.CharField(blank=True, max_length=255)),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='loans.AddressV1')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DemographicsV1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('ethnicity', models.CharField(blank=True, max_length=128, null=True)),
                ('race', core.fields.CustomArrayField(base_field=models.CharField(choices=[('AmericanIndianOrAlaskaNative', 'AmericanIndianOrAlaskaNative'), ('Asian', 'Asian'), ('BlackOrAfricanAmerican', 'BlackOrAfricanAmerican'), ('NativeHawaiianOrOtherPacificIslander', 'NativeHawaiianOrOtherPacificIslander'), ('White', 'White'), ('NotApplicable', 'NotApplicable')], max_length=128), default=[], size=None)),
                ('gender', models.CharField(blank=True, max_length=10, null=True)),
                ('is_us_citizen', models.NullBooleanField()),
                ('is_permanent_resident_alien', models.NullBooleanField()),
                ('is_party_to_lawsuit', models.NullBooleanField()),
                ('is_party_to_lawsuit_explanation', models.TextField(blank=True)),
                ('is_obligated_to_pay_alimony_or_separate_maintenance', models.NullBooleanField()),
                ('is_obligated_to_pay_alimony_or_separate_maintenance_explanation', models.TextField(blank=True)),
                ('is_any_part_of_downpayment_borrowed', models.NullBooleanField()),
                ('is_any_part_of_downpayment_borrowed_explanation', models.TextField(blank=True)),
                ('is_comaker_or_endorser_on_note', models.NullBooleanField()),
                ('is_comaker_or_endorser_on_note_explanation', models.TextField(blank=True)),
                ('is_delinquent_on_debt_presently', models.NullBooleanField()),
                ('is_delinquent_on_debt_presently_explanation', models.TextField(blank=True)),
                ('has_outstanding_judgements', models.NullBooleanField()),
                ('has_outstanding_judgements_explanation', models.TextField(blank=True)),
                ('has_declared_bankruptcy_within_past_seven_years', models.NullBooleanField()),
                ('has_declared_bankruptcy_within_past_seven_years_explanation', models.TextField(blank=True)),
                ('has_property_foreclosed_within_past_seven_years', models.NullBooleanField()),
                ('has_property_foreclosed_within_past_seven_years_explanation', models.TextField(blank=True)),
                ('has_been_obligated_on_resulted_in_foreclosure_loan', models.NullBooleanField()),
                ('has_been_obligated_on_resulted_in_foreclosure_loan_explanation', models.TextField(blank=True)),
                ('has_ownership_interest_in_property_last_three_years', models.NullBooleanField()),
                ('plans_to_occupy_as_primary_residence', models.NullBooleanField()),
                ('are_ethnicity_questions_skipped', models.NullBooleanField()),
                ('owned_property_title_hold', models.CharField(blank=True, max_length=50)),
                ('owned_property_type', models.CharField(blank=True, max_length=50)),
                ('is_demographics_questions_request_confirmed', models.NullBooleanField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EmploymentV1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('s_corp_percent', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('c_corp_percent', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('company_entity_type', models.CharField(blank=True, max_length=50)),
                ('company_other_entity_type', models.CharField(blank=True, max_length=50)),
                ('company_name', models.CharField(blank=True, max_length=64, null=True)),
                ('phone', models.CharField(blank=True, max_length=64, null=True)),
                ('phone_extension', models.CharField(blank=True, max_length=64, null=True)),
                ('title', models.CharField(blank=True, max_length=64, null=True)),
                ('start_date', models.DateField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(datetime.date(1900, 1, 1)), django.core.validators.MaxValueValidator(datetime.date(2200, 1, 1))])),
                ('end_date', models.DateField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(datetime.date(1900, 1, 1)), django.core.validators.MaxValueValidator(datetime.date(2200, 1, 1))])),
                ('years_in_field', models.IntegerField(blank=True, null=True)),
                ('is_employee_of_company', models.NullBooleanField()),
                ('is_self_employed', models.NullBooleanField()),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employmentv1_address', to='loans.AddressV1')),
                ('company_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employmentv1_company_address', to='loans.AddressV1')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExpenseV1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('kind', models.CharField(choices=[('Rent', 'Rent'), ('First Mortgage', 'First Mortgage'), ('Other Financing', 'Other Financing'), ('Real Estate', 'Real Estate'), ('Mortgage Insurance', 'Mortgage Insurance'), ('Hazard Insurance', 'Hazard Insurance'), ('Homeowner Association', 'Homeowner Association'), ('Other', 'Other')], max_length=100)),
                ('value', money.models.fields.MoneyField(blank=True, decimal_places=2, default=None, default_currency='USD', max_digits=10, null=True)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('value_currency', money.models.fields.CurrencyField(default='USD', editable=False, max_length=3)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HoldingAssetV1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=128, null=True)),
                ('description', models.CharField(blank=True, max_length=128, null=True)),
                ('account_number', django_postgres_pgpfields.fields.TextPGPPublicKeyField(blank=True, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('symbol', models.CharField(blank=True, max_length=255)),
                ('cusip', models.CharField(blank=True, max_length=255)),
                ('kind', models.CharField(blank=True, max_length=255)),
                ('current_value', money.models.fields.MoneyField(blank=True, decimal_places=2, default=None, default_currency='USD', max_digits=10, null=True)),
                ('institution_name', models.CharField(blank=True, max_length=255)),
                ('is_liquidating_or_borrowing', models.NullBooleanField()),
                ('current_value_currency', money.models.fields.CurrencyField(default='USD', editable=False, max_length=3)),
                ('institution_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='holdingassetv1_institution_address', to='loans.AddressV1')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django_postgres_pgpfields.managers.PGPEncryptedManager()),
            ],
        ),
        migrations.CreateModel(
            name='IncomeV1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('kind', models.CharField(choices=[('Base', 'Base'), ('Bonus', 'Bonus'), ('Commission', 'Commission'), ('Dividend', 'Dividend'), ('Net Rental', 'Net Rental'), ('Other', 'Other'), ('Overtime', 'Overtime')], max_length=100)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('value', money.models.fields.MoneyField(blank=True, decimal_places=2, default=None, default_currency='USD', max_digits=10, null=True)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('use_automated_process', models.NullBooleanField()),
                ('value_currency', money.models.fields.CurrencyField(default='USD', editable=False, max_length=3)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InsuranceAssetV1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('kind', models.CharField(blank=True, choices=[('Life Insurance', 'Life Insurance'), ('Other', 'Other')], max_length=100)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('value', money.models.fields.MoneyField(blank=True, decimal_places=2, default=None, default_currency='USD', max_digits=10, null=True)),
                ('value_currency', money.models.fields.CurrencyField(default='USD', editable=False, max_length=3)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Lead',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('lead_id', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LiabilityV1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('kind', models.CharField(blank=True, choices=[('child_care', 'Child Care'), ('child_support', 'Child Support'), ('collections_judgments_and_liens', 'Collections Judgments And Liens'), ('heloc', 'HELOC'), ('installment', 'Installment'), ('lease_payments', 'Lease Payments'), ('mortgage_loan', 'Mortgage Loan'), ('open_30_days_charge_account', 'Open 30 Days Charge Account'), ('other_expense', 'Other Expense'), ('other_liability', 'Other Liability'), ('revolving', 'Revolving'), ('separate_maintenance_expense', 'Separate Maintenance Expense'), ('taxes', 'Taxes')], max_length=50)),
                ('source', models.CharField(blank=True, choices=[('advisor_questionnaire', 'Advisor Questionnaire'), ('cbc_credit_report', 'CBC Credit Report'), ('consumer_questionnaire', 'Consoumer Questionnaire')], default='advisor_questionnaire', max_length=50)),
                ('holder_name', models.CharField(blank=True, max_length=255)),
                ('account_in_name_of', models.CharField(blank=True, max_length=255)),
                ('account_identifier', django_postgres_pgpfields.fields.TextPGPPublicKeyField(blank=True, null=True)),
                ('monthly_payment', money.models.fields.MoneyField(blank=True, decimal_places=2, default=None, default_currency='USD', max_digits=10, null=True)),
                ('months_remaining', models.IntegerField(blank=True, null=True)),
                ('unpaid_balance', money.models.fields.MoneyField(blank=True, decimal_places=2, default=None, default_currency='USD', max_digits=10, null=True)),
                ('exclude_from_liabilities', models.NullBooleanField()),
                ('will_be_paid_off', models.NullBooleanField()),
                ('will_be_subordinated', models.NullBooleanField()),
                ('description', models.TextField(blank=True)),
                ('comment', models.TextField(blank=True)),
                ('comment_updated', models.DateTimeField(blank=True, null=True)),
                ('is_editable', models.BooleanField(default=True)),
                ('monthly_payment_currency', money.models.fields.CurrencyField(default='USD', editable=False, max_length=3)),
                ('unpaid_balance_currency', money.models.fields.CurrencyField(default='USD', editable=False, max_length=3)),
                ('holder_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='liabilityv1_holder_address', to='loans.AddressV1')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django_postgres_pgpfields.managers.PGPEncryptedManager()),
            ],
        ),
        migrations.CreateModel(
            name='LoanProfileV1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True)),
                ('property_value_estimated', money.models.fields.MoneyField(blank=True, decimal_places=2, default=None, default_currency='USD', max_digits=10, null=True)),
                ('refinance_year_acquired', models.PositiveIntegerField(blank=True, null=True)),
                ('refinance_original_cost', money.models.fields.MoneyField(blank=True, decimal_places=2, default=None, default_currency='USD', max_digits=10, null=True)),
                ('refinance_amount_of_existing_liens', money.models.fields.MoneyField(blank=True, decimal_places=2, default=None, default_currency='USD', max_digits=10, null=True)),
                ('purpose_of_refinance', models.TextField(blank=True, null=True)),
                ('is_cash_out', models.NullBooleanField()),
                ('cash_out_amount', money.models.fields.MoneyField(blank=True, decimal_places=2, default=None, default_currency='USD', max_digits=10, null=True)),
                ('is_already_in_contract', models.NullBooleanField()),
                ('is_down_payment_subordinate_finances_used', models.NullBooleanField()),
                ('down_payment_amount', money.models.fields.MoneyField(blank=True, decimal_places=2, default=None, default_currency='USD', max_digits=10, null=True)),
                ('down_payment_source', models.TextField(blank=True, max_length=50)),
                ('deposit_company_name', models.CharField(blank=True, max_length=100)),
                ('deposit_cash_value', money.models.fields.MoneyField(blank=True, decimal_places=2, default=None, default_currency='USD', max_digits=10, null=True)),
                ('is_refinancing_current_address', models.NullBooleanField()),
                ('new_property_info_contract_purchase_price', money.models.fields.MoneyField(blank=True, decimal_places=2, default=None, default_currency='USD', max_digits=10, null=True)),
                ('are_accounts_filling_jointly', models.NullBooleanField()),
                ('application_taken_method', models.CharField(choices=[('FaceToFace', 'FaceToFace'), ('Internet', 'Internet'), ('Telephone', 'Telephone')], default='Telephone', max_length=16)),
                ('is_demographics_questions_request_confirmed', models.NullBooleanField()),
                ('property_purpose', models.CharField(blank=True, max_length=100)),
                ('purpose_of_loan', models.CharField(blank=True, max_length=100)),
                ('how_title_will_be_held', models.CharField(blank=True, max_length=50)),
                ('how_estate_will_be_held', models.CharField(choices=[('fee_simple', 'fee_simple'), ('leasehold', 'leasehold')], default='fee_simple', max_length=10)),
                ('leasehold_expiration_date', models.DateField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(datetime.date(1900, 1, 1)), django.core.validators.MaxValueValidator(datetime.date(2200, 1, 1))])),
                ('mortgage_type', models.CharField(blank=True, max_length=100)),
                ('other_mortgage_type_description', models.CharField(blank=True, max_length=100)),
                ('base_loan_amount', money.models.fields.MoneyField(blank=True, decimal_places=2, default=None, default_currency='USD', max_digits=10, null=True)),
                ('requested_interest_rate_percent', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('loan_amortization_term_months', models.PositiveIntegerField(blank=True, null=True)),
                ('loan_amortization_type', models.CharField(blank=True, max_length=100)),
                ('other_amortization_type_description', models.CharField(blank=True, max_length=100)),
                ('arm_type_description', models.CharField(blank=True, max_length=100)),
                ('gpm_years', models.PositiveIntegerField(blank=True, null=True)),
                ('gpm_rate', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('other_on_loan', models.CharField(choices=[('spouse_or_partner', 'spouse_or_partner'), ('someone_else', 'someone_else'), ('no', 'no')], max_length=30, null=True)),
                ('uniquifier', models.CharField(blank=True, max_length=8)),
                ('is_active', models.BooleanField(default=True)),
                ('guid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('lock_owner', models.CharField(choices=[('advisor', 'advisor'), ('customer', 'customer')], default='advisor', max_length=20)),
                ('lock_owner_updated', model_utils.fields.MonitorField(default=None, monitor='lock_owner', null=True)),
                ('los_name', models.CharField(blank=True, max_length=64, null=True)),
                ('los_guid', models.CharField(blank=True, max_length=128, null=True)),
                ('crm_id', models.CharField(blank=True, max_length=255)),
                ('crm_type', models.CharField(blank=True, max_length=255)),
                ('crm_object_type', models.CharField(choices=[('lead', 'lead'), ('opportunity', 'opportunity')], default='lead', max_length=16)),
                ('crm_last_sent', models.DateTimeField(blank=True, null=True)),
                ('datetime_sent_to_encompass', models.DateTimeField(blank=True, null=True)),
                ('datetime_synced_with_encompass', models.DateTimeField(blank=True, null=True)),
                ('encompass_sync_status', models.CharField(blank=True, choices=[('NEVER_SYNCED', 'NEVER_SYNCED'), ('SYNCED', 'SYNCED'), ('SYNC_IN_PROGRESS', 'SYNC_IN_PROGRESS'), ('READY_TO_SYNC', 'READY_TO_SYNC'), ('SYNC_FAILED', 'SYNC_FAILED')], default='NEVER_SYNCED', max_length=100)),
                ('_respa_triggered', models.BooleanField(default=False)),
                ('respa_triggered_at', model_utils.fields.MonitorField(default=None, monitor='_respa_triggered', null=True, when=set([True]))),
                ('property_value_estimated_currency', money.models.fields.CurrencyField(default='USD', editable=False, max_length=3)),
                ('refinance_original_cost_currency', money.models.fields.CurrencyField(default='USD', editable=False, max_length=3)),
                ('refinance_amount_of_existing_liens_currency', money.models.fields.CurrencyField(default='USD', editable=False, max_length=3)),
                ('cash_out_amount_currency', money.models.fields.CurrencyField(default='USD', editable=False, max_length=3)),
                ('down_payment_amount_currency', money.models.fields.CurrencyField(default='USD', editable=False, max_length=3)),
                ('deposit_cash_value_currency', money.models.fields.CurrencyField(default='USD', editable=False, max_length=3)),
                ('new_property_info_contract_purchase_price_currency', money.models.fields.CurrencyField(default='USD', editable=False, max_length=3)),
                ('base_loan_amount_currency', money.models.fields.CurrencyField(default='USD', editable=False, max_length=3)),
                ('advisor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='loan_profilesV1', to='accounts.Advisor')),
                ('credit_report_xml_storage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='storage.Storage')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='loan_profilesv1', to='accounts.Customer')),
                ('lead', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='loan_profilesv1', to='loans.Lead')),
                ('new_property_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='loans.AddressV1')),
                ('prequal_letter_storage', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='loan_profile', to='storage.Storage')),
                ('storage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='loan_profilesv1', to='storage.Storage')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LoanV1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('loan_id', models.CharField(blank=True, max_length=255)),
                ('lock_date', models.DateField(blank=True, null=True)),
                ('lock_days', models.PositiveIntegerField(blank=True, null=True)),
                ('lender_name', models.CharField(blank=True, max_length=255)),
                ('product', models.CharField(blank=True, max_length=255)),
                ('loan_amount', money.models.fields.MoneyField(blank=True, decimal_places=2, default=None, default_currency='USD', max_digits=10, null=True)),
                ('ltv', models.CharField(blank=True, max_length=255)),
                ('interest_rate', models.CharField(blank=True, max_length=255)),
                ('purchase_price', money.models.fields.MoneyField(blank=True, decimal_places=2, default=None, default_currency='USD', max_digits=10, null=True)),
                ('monthly_principal_and_interest', money.models.fields.MoneyField(blank=True, decimal_places=2, default=None, default_currency='USD', max_digits=10, null=True)),
                ('total_monthly_payment', money.models.fields.MoneyField(blank=True, decimal_places=2, default=None, default_currency='USD', max_digits=10, null=True)),
                ('target_close_date', models.DateField(blank=True, null=True)),
                ('last_sync', models.DateTimeField(blank=True, null=True)),
                ('total_monthly_payment_currency', money.models.fields.CurrencyField(default='USD', editable=False, max_length=3)),
                ('monthly_principal_and_interest_currency', money.models.fields.CurrencyField(default='USD', editable=False, max_length=3)),
                ('purchase_price_currency', money.models.fields.CurrencyField(default='USD', editable=False, max_length=3)),
                ('loan_amount_currency', money.models.fields.CurrencyField(default='USD', editable=False, max_length=3)),
                ('loan_profile', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='loans.LoanProfileV1')),
                ('property_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='loans.AddressV1')),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='sampleTeamV1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('coordinator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='loans', to='accounts.Coordinator')),
                ('escrow_officer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='loans.ContactV1')),
                ('loan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sample_team', to='loans.LoanV1')),
                ('processor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='loans.ContactV1')),
                ('realtor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='loans', to='accounts.Realtor')),
                ('specialist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='loans', to='accounts.Specialist')),
                ('title_officer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='loans.ContactV1')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VehicleAssetV1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('make', models.CharField(blank=True, max_length=255)),
                ('model', models.CharField(blank=True, max_length=255)),
                ('year', models.CharField(blank=True, max_length=255)),
                ('value', money.models.fields.MoneyField(blank=True, decimal_places=2, default=None, default_currency='USD', max_digits=10, null=True)),
                ('value_currency', money.models.fields.CurrencyField(default='USD', editable=False, max_length=3)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='coborrowerv1',
            name='demographics',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='coborrowerv1', to='loans.DemographicsV1'),
        ),
        migrations.AddField(
            model_name='coborrowerv1',
            name='expense',
            field=models.ManyToManyField(related_name='coborrowerv1', to='loans.ExpenseV1'),
        ),
        migrations.AddField(
            model_name='coborrowerv1',
            name='holding_assets',
            field=models.ManyToManyField(related_name='coborrowerv1', to='loans.HoldingAssetV1'),
        ),
        migrations.AddField(
            model_name='coborrowerv1',
            name='income',
            field=models.ManyToManyField(related_name='coborrowerv1', to='loans.IncomeV1'),
        ),
        migrations.AddField(
            model_name='coborrowerv1',
            name='insurance_assets',
            field=models.ManyToManyField(related_name='coborrowerv1', to='loans.InsuranceAssetV1'),
        ),
        migrations.AddField(
            model_name='coborrowerv1',
            name='liabilities',
            field=models.ManyToManyField(related_name='coborrowerv1', to='loans.LiabilityV1'),
        ),
        migrations.AddField(
            model_name='coborrowerv1',
            name='mailing_address',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='coborrowerv1_mailing_address', to='loans.AddressV1'),
        ),
        migrations.AddField(
            model_name='coborrowerv1',
            name='previous_addresses',
            field=models.ManyToManyField(related_name='coborrowerv1', to='loans.AddressV1'),
        ),
        migrations.AddField(
            model_name='coborrowerv1',
            name='previous_employment',
            field=models.ManyToManyField(related_name='coborrowerv1', to='loans.EmploymentV1'),
        ),
        migrations.AddField(
            model_name='coborrowerv1',
            name='realtor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='coborrowerv1_realtor', to='loans.ContactV1'),
        ),
        migrations.AddField(
            model_name='coborrowerv1',
            name='vehicle_assets',
            field=models.ManyToManyField(related_name='coborrowerv1', to='loans.VehicleAssetV1'),
        ),
        migrations.AddField(
            model_name='borrowerv1',
            name='demographics',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='borrowerv1', to='loans.DemographicsV1'),
        ),
        migrations.AddField(
            model_name='borrowerv1',
            name='expense',
            field=models.ManyToManyField(related_name='borrowerv1', to='loans.ExpenseV1'),
        ),
        migrations.AddField(
            model_name='borrowerv1',
            name='holding_assets',
            field=models.ManyToManyField(related_name='borrowerv1', to='loans.HoldingAssetV1'),
        ),
        migrations.AddField(
            model_name='borrowerv1',
            name='income',
            field=models.ManyToManyField(related_name='borrowerv1', to='loans.IncomeV1'),
        ),
        migrations.AddField(
            model_name='borrowerv1',
            name='insurance_assets',
            field=models.ManyToManyField(related_name='borrowerv1', to='loans.InsuranceAssetV1'),
        ),
        migrations.AddField(
            model_name='borrowerv1',
            name='liabilities',
            field=models.ManyToManyField(related_name='borrowerv1', to='loans.LiabilityV1'),
        ),
        migrations.AddField(
            model_name='borrowerv1',
            name='loan_profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='borrowers', to='loans.LoanProfileV1'),
        ),
        migrations.AddField(
            model_name='borrowerv1',
            name='mailing_address',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='borrowerv1_mailing_address', to='loans.AddressV1'),
        ),
        migrations.AddField(
            model_name='borrowerv1',
            name='previous_addresses',
            field=models.ManyToManyField(related_name='borrowerv1', to='loans.AddressV1'),
        ),
        migrations.AddField(
            model_name='borrowerv1',
            name='previous_employment',
            field=models.ManyToManyField(related_name='borrowerv1', to='loans.EmploymentV1'),
        ),
        migrations.AddField(
            model_name='borrowerv1',
            name='realtor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='borrowerv1_realtor', to='loans.ContactV1'),
        ),
        migrations.AddField(
            model_name='borrowerv1',
            name='vehicle_assets',
            field=models.ManyToManyField(related_name='borrowerv1', to='loans.VehicleAssetV1'),
        ),
    ]
